{"version":3,"file":"static/js/69.10a6d0ad.chunk.js","mappings":"kQAkEA,UApDoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MAEjBC,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,UAASM,EAAAA,GAAWC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA3CG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1BG,GAAwCC,EAAAA,EAAAA,KAAhCC,EAAQF,EAARE,SAAUC,EAAiBH,EAAjBG,kBACZC,GAAUC,EAAAA,EAAAA,IAAYF,GAEtBG,GAAOD,EAAAA,EAAAA,IAAYH,GAEnBK,GAAqBC,EAAAA,EAAAA,GAAkBF,EAAMR,IAEnDW,EAAAA,EAAAA,YAAU,WACRtB,GAASuB,EAAAA,EAAAA,IAAWjB,GACtB,GAAG,CAACN,EAAUM,IAkBd,OACEkB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAChB,WAAYA,KACpBe,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACV,KAAMC,IAChBH,GACCU,EAAAA,EAAAA,KAACG,EAAAA,EAAM,KAEPH,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UAtBWP,EAAKY,OACP,IAAM,IACjBC,EAAAA,GAAMC,KAAK,mBAAoB,CAC7BC,MAAO,aAEF,MAmBDP,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,QAbE,WAClB7B,GAAQ,SAAC8B,GAAI,OAAKA,EAAO,CAAC,GAC5B,EAWwCC,UAAU,EAAKZ,SAAC,kBAQ1D,C","sources":["pages/CatalogPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { selectors } from \"../redux/selectors\";\nimport { toast } from \"react-toastify\";\n\nimport CardsList from \"../components/CardsList/CardsList\";\nimport Button from \"../components/Button/Button\";\nimport { getAllCars } from \"../redux/cars/operations\";\nimport Loader from \"../components/Loader/Loader\";\nimport Filter from \"../components/Filter/Filter\";\nimport { getFilterContacts } from \"../utils/helpers\";\nimport { initFilter } from \"../const/initFilter\";\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n\n  const [page, setPage] = useState(1);\n  const [filters, setFilters] = useState(initFilter);\n\n  const { carsList, isLoadingCarsList } = selectors();\n  const loading = useSelector(isLoadingCarsList);\n\n  const cars = useSelector(carsList);\n\n  const cardsListForRender = getFilterContacts(cars, filters);\n\n  useEffect(() => {\n    dispatch(getAllCars(page));\n  }, [dispatch, page]);\n\n  const isLastPage = () => {\n    const length = cars.length;\n    if (length % 8 !== 0) {\n      toast.info(\"It was last page\", {\n        theme: \"colored\",\n      });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const handleclick = () => {\n    setPage((prev) => prev + 1);\n  };\n\n  return (\n    <>\n      <Filter setFilters={setFilters} />\n      <CardsList cars={cardsListForRender} />\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {isLastPage() && (\n            <Button onClick={handleclick} loadMore={true}>\n              Load more\n            </Button>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","initFilter","_useState4","filters","setFilters","_selectors","selectors","carsList","isLoadingCarsList","loading","useSelector","cars","cardsListForRender","getFilterContacts","useEffect","getAllCars","_jsxs","_Fragment","children","_jsx","Filter","CardsList","Loader","length","toast","info","theme","Button","onClick","prev","loadMore"],"sourceRoot":""}